dist: trusty
language: python

install:
    - ./.travis/install.sh

# pypy is not passing, but allow failures for coverage stage to be reached
matrix:
  allow_failures:
    - python: pypy


jobs:
  include:
    - &test_job
      stage: Test
      
      # run the entire test suite
      script: python runtest.py -a || if [[ $? == 2 ]]; then true; else false; fi
      before_script: skip
      after_success: skip
      python: 2.7
      env: PYVER=27
      sudo: required

    # run the test suite again for each version of python
    - <<: *test_job
      python: 3.5
      env: PYVER=35
      sudo: required

    - <<: *test_job
      python: 3.6
      env: PYVER=36
      sudo: required

    - <<: *test_job
      python: pypy
      env: PYVER=pypy
      sudo: required


    - &coverage_jobs
      stage: Coverage
      
      before_script:
        - ./.travis/coverage_install.sh

      script: 
        # setup environment
        - export COVERAGE_FILE=$PWD/.coverage_file
        - export TOTAL_BUILD_JOBS=8
        - export COVERAGE_PROCESS_START=$PWD/.coveragerc
        
        # get a list of all tests
        - python runtest.py -l -a > all_tests
        
        # create the selection of tests to use in this build
        - let "start = ($(wc -l < all_tests) / ${TOTAL_BUILD_JOBS}) * (${BUILD_JOB_NUM} - 1)"; true;
        - let "end = ($(wc -l < all_tests) / ${TOTAL_BUILD_JOBS}) * ${BUILD_JOB_NUM}"
        - if (( ${BUILD_JOB_NUM} == ${TOTAL_BUILD_JOBS} )); then end=$(wc -l < all_tests); fi
        - if (( ${start} == 0 )); then start=1; fi
        - sed -n ${start},${end}p all_tests > build_tests
        
        # run the selected test with coverage
        - coverage run -p --rcfile=$PWD/.coveragerc runtest.py -f build_tests || if [[ $? == 2 ]]; then true; else false; fi

      after_success:
        # create the report and send to coveralls (linked through github)
        - coverage combine
        - coverage report
        - coveralls --rcfile=$PWD/.coveragerc

      env: BUILD_JOB_NUM=1

    # run the same coverage script for each build number
    - <<: *coverage_jobs
      env: BUILD_JOB_NUM=2
    - <<: *coverage_jobs
      env: BUILD_JOB_NUM=3
    - <<: *coverage_jobs
      env: BUILD_JOB_NUM=4
    - <<: *coverage_jobs
      env: BUILD_JOB_NUM=5
    - <<: *coverage_jobs
      env: BUILD_JOB_NUM=6
    - <<: *coverage_jobs
      env: BUILD_JOB_NUM=7
    - <<: *coverage_jobs
      env: BUILD_JOB_NUM=8

